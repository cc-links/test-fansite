name: Release

on:
  workflow_dispatch:
    inputs:
      id:
        description: 'MongoDB ID'
        required: true
        default: ''
      run_id:
        description: 'Run ID'
        required: true
        default: ''
      env_var:
        description: 'Env'
        required: true
        default: ''

jobs:
  release:
    name: 发布任务
    runs-on: ubuntu-latest

    steps:

      - name: 🔄 通知后端：发布开始
        uses: fjogeleit/http-request-action@v1
        with:
          method: POST
          url: '${{ vars.FE_API }}/repo/publish/update'
          data: '{
            "status": "in_progress",
            "run_id": "${{ github.event.inputs.run_id }}",
            "id": "${{ github.event.inputs.id }}"
          }'
          customHeaders: '{"Content-Type": "application/json"}'
          timeout: 15000
          maskResponse: true

      - name: 📥 拉取代码
        uses: actions/checkout@v2

      - name: 🔐 配置 AWS 凭证
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: 📁 判断目标发布目录
        id: pick_publish_folder
        run: |
          if [ "${{ github.event.inputs.env_var }}" = "test" ]; then
            echo "folder=test" >> $GITHUB_OUTPUT
          else
            echo "folder=dev" >> $GITHUB_OUTPUT
          fi

      - name: ☁️ 上传构建产物
        run: |
          FOLDER=${{ steps.pick_publish_folder.outputs.folder }}
          aws s3 sync ${{ vars.DIST_AWS_BUCKET_NAME }}/${{ github.event.inputs.runId }} ${{ vars.TARGET_BUCKET_NAME }}/$FOLDER/ --exclude "*.html"
          aws s3 cp ${{ vars.DIST_AWS_BUCKET_NAME }}/${{ github.event.inputs.runId }}/ ${{ vars.TARGET_BUCKET_NAME }}/$FOLDER --recursive --exclude "*" --include "*.html" --cache-control no-store

      - name: ✅ 通知后端：发布完成
        uses: fjogeleit/http-request-action@v1
        with:
          method: POST
          url: '${{ vars.FE_API }}/repo/publish/update'
          data: '{
            "status": "success",
            "run_id": "${{ github.event.inputs.run_id }}",
            "id": "${{ github.event.inputs.id }}"
          }'
          customHeaders: '{"Content-Type": "application/json"}'
          timeout: 15000
          maskResponse: true